version: "3.9"
services:
  influxdb:
    image: influxdb:1.8
    container_name: influxdb
    restart: unless-stopped
    # ports:
    #   - "8086:8086"
    volumes:
      - ./influx-db-data:/var/lib/influxdb
    environment:
      - INFLUXDB_DB=walmorecommon
    user: "${UID}"

  telegraf:
    image: telegraf:1.25
    container_name: telegraf
    restart: unless-stopped
    # environment:
    #   - TTN_USERNAME=${TTN_USERNAME}
    #   - TTN_ACCESS_KEY=${TTN_ACCESS_KEY}
    volumes:
      - ./telegraf.conf:/etc/telegraf/telegraf.conf:ro
    network_mode: service:influxdb
    depends_on:
      - influxdb

  grafana:
    image: grafana/grafana:9.3.6
    container_name: grafana
    restart: unless-stopped
    labels:
      - traefik.docker.network=traefik-proxy_frontend
      - "traefik.http.routers.grafana-insecure.rule=PathPrefix(`/`)"
      - traefik.http.routers.grafana-insecure.entrypoints=web
      - traefik.http.routers.grafana-insecure.middlewares=redirect-permanent-https
      - "traefik.http.routers.grafana.rule=PathPrefix(`/`)"
      - traefik.http.routers.grafana.entrypoints=websecure
      - traefik.http.routers.grafana.tls=true
      - traefik.http.routers.grafana.tls.certresolver=letsencrypt
      - traefik.http.routers.grafana.tls.domains[0].main=monitoring.walmorecommon.org
      - traefik.http.services.grafana.loadbalancer.server.port=3000
    # ports:
    #   - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Viewer
    volumes:
      - ./grafana-storage:/var/lib/grafana
    networks:
      - default
      - traefik-proxy_frontend
    user: "${UID}"

networks:
  traefik-proxy_frontend:
    external: true
